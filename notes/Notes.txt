TestNG - an unit testing framework
@BeforeSuite
@BeforeTest
@BeforeClass
@DataProvider - [rows][cols]
@BeforeMethod
@Test
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite


PageObjectModel
XML -> BeforeTest -> DataProvider -> BeforeMethod -> Test -> AfterMethod
1. When there is a change in locator value the user have to updated
manually in all the test cases
2. When there is a change in locator/element, the user have to update
manually in all the test cases
3. We do not reuse the elements that is already found

POM is a design pattern
This helps the user to create, organize and maintain the locators and
their actions in a reusable way.
						     Pages
							|
XML -> BeforeTest -> DataProvider -> BeforeMethod -> Test -> AfterMethod

Ing required to learn Page Object Model
1. Java class
2. Variables
3. Methods
4. Constructors



Rules for Page Object Model
1. Every individual page should be converted into an individual 
java class that should inherit the base class.
2. Every class must have a constructor.
3. Every action/verification should be converted into a method.
4. All the methods should return where it lands to.








Class room
1. Create a new Maven Project
2. Add dependencies
3. Copy paste TestNG Structure
4. Implement Rule 1,2 & 3




































